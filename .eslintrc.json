{
    "root": true,
    "extends": ["eslint:recommended", "prettier"],
    "parser": "@typescript-eslint/parser",
    "ignorePatterns": ["dist", "node_modules"],
    "plugins": ["@typescript-eslint", "simple-import-sort", "unused-imports"/* , "license-header" */],
    "env": {
        "node": true,
        "es6": true
    },
    "rules": {
        // License Header
        /* "license-header/header": ["error", "scripts/header.js"], */

        // Import Sorting
        "simple-import-sort/imports": "error",
        "simple-import-sort/exports": "error",
        "unused-imports/no-unused-imports": "error",
        "no-duplicate-imports": "error",

        // Code Style
        "quotes": ["error", "single", { "avoidEscape": true }],
        "semi": ["error", "always"],
        "semi-style": ["error", "last"],
        "no-mixed-spaces-and-tabs": "error",
        "indent": ["error", 4, { "SwitchCase": 1 }],
        "eol-last": ["error", "always"],
        "@typescript-eslint/func-call-spacing": ["error", "never"],
        "no-multi-spaces": "error",
        "no-trailing-spaces": "error",
        "no-whitespace-before-property": "error",
        "space-in-parens": ["error", "never"],
        "block-spacing": ["error", "always"],
        "object-curly-spacing": ["error", "always"],
        "eqeqeq": ["error", "always", { "null": "ignore" }],
        "spaced-comment": ["error", "always", { "markers": ["!"] }],
        "yoda": "error",
        "prefer-destructuring": ["error", { "VariableDeclarator": { "array": false, "object": true }, "AssignmentExpression": { "array": false, "object": false } }],
        "operator-assignment": ["error", "always"],
        "no-useless-computed-key": "error",
        "no-unneeded-ternary": ["error", { "defaultAssignment": false }],
        "no-invalid-regexp": "error",
        "no-constant-condition": ["error", { "checkLoops": false }],
        "no-extra-semi": "error",
        "dot-notation": "error",
        "for-direction": "error",

        // Error Handling and Security
        "no-fallthrough": "error",
        "no-async-promise-executor": "error",
        "no-cond-assign": "error",
        "no-dupe-else-if": "error",
        "no-duplicate-case": "error",
        "no-irregular-whitespace": "error",
        "no-loss-of-precision": "error",
        "no-misleading-character-class": "error",
        "no-prototype-builtins": "error",
        "no-regex-spaces": "error",
        "no-shadow-restricted-names": "error",
        "no-unexpected-multiline": "error",
        "no-unsafe-optional-chaining": "error",
        "no-useless-backreference": "error",
        "use-isnan": "error",

        // Best Practices
        "prefer-const": "error",
        "prefer-spread": "error"
    }
}